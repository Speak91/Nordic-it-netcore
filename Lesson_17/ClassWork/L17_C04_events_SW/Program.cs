using System;
using System.IO;
using System.IO.Compression;

namespace L17_C04_events_SW
{
	class Program
	{
		static void Main(string[] args)
		{
			var gen = new RandomDataGenerator();
			gen.RandomDataGenerated += OnRandomDataGenerated;
			gen.RandomDataGenerationDone += OnRandomDataGenerationDone;

			var randomBytes = gen.GetRandomData(100000, 5000);

			Console.WriteLine(
				"Random data: {0}",
				Convert.ToBase64String(randomBytes));

			// writing generated bytes to a binary file
			const string binaryFileName = "random.data";
			File.WriteAllBytes(binaryFileName, randomBytes);

			// zipping the binary file
			const string zipFileName = binaryFileName + ".zip";

			if (File.Exists(zipFileName))
				File.Delete(zipFileName);

			using (var zip = ZipFile.Open(binaryFileName + ".zip", ZipArchiveMode.Create))
				zip.CreateEntryFromFile(binaryFileName, binaryFileName);
		}

		private static void OnRandomDataGenerated(int bytesDone, int totalBytes)
		{
			Console.WriteLine($"Generated {bytesDone} from {totalBytes} byte(s)...");
		}

		private static void OnRandomDataGenerationDone(object sender, EventArgs e)
		{
			Console.WriteLine($"Generation DONE");
		}
	}
}
